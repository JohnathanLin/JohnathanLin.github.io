<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>UDP on 风萧古道 - 勤学苦练，年复一年</title>
    <link>https://johnathanlin.github.io/tags/udp/</link>
    <description>Recent content in UDP on 风萧古道 - 勤学苦练，年复一年</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Windypath 风萧古道 [闽ICP备15016446号-3](https://beian.miit.gov.cn/)</copyright>
    <lastBuildDate>Sat, 13 Nov 2021 15:31:00 +0800</lastBuildDate><atom:link href="https://johnathanlin.github.io/tags/udp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用Python实现简单UDP Ping</title>
      <link>https://johnathanlin.github.io/posts/simple_udp_ping_with_python/</link>
      <pubDate>Sat, 13 Nov 2021 15:31:00 +0800</pubDate>
      
      <guid>https://johnathanlin.github.io/posts/simple_udp_ping_with_python/</guid>
      <description>套接字编程作业2：UDP ping 程序 在本实验中，您将学习使用Python进行UDP套接字编程的基础知识。您将学习如何使用UDP套接字发送和接收数据报，以及如何设置适当的套接字超时。在实验中，您将熟悉Ping应用程序及其在计算统计信息（如丢包率）中的作用。
您首先需要研究一个用Python编写的简单的ping服务器程序，并实现对应的客户端程序。这些程序提供的功能类似于现代操作系统中可用的标准ping程序功能。然而，我们的程序使用更简单的UDP协议，而不是标准互联网控制消息协议（ICMP）来进行通信。 ping协议允许客户端机器发送一个数据包到远程机器，并使远程机器将数据包返回到客户（称为回显）的操作。另外，ping协议允许主机计算它到其他机器的往返时间。
以下是Ping服务器程序的完整代码。你的任务是写出Ping客户端程序。
服务器代码 以下代码完整实现了一个ping服务器。您需要在运行客户端程序之前编译并运行此代码。而且您不需要修改此代码。 在这个服务器代码中，30％的客户端的数据包会被模拟丢失。你应该仔细研究这个代码，它将帮助你编写ping客户端。
# UDPPingerServer.py  # We will need the following module to generate randomized lost packets import random  from socket import * import random  # Create a UDP socket  # Notice the use of SOCK_DGRAM for UDP packets  serverSocket = socket(AF_INET, SOCK_DGRAM) # Assign IP address and port number to socket  serverSocket.bind((&amp;#39;&amp;#39;, 12000))  while True: 	# Generate random number in the range of 0 to 10  	rand = random.</description>
    </item>
    
  </channel>
</rss>
