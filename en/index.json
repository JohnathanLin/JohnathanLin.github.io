[{"content":"Click here to download my virtual machine image Download virtual machine image:\nLink：https://pan.baidu.com/s/1yfY0SjDrtOeuTiEWf7YizA?pwd=374l\nFetch Code：374l\nMy VirtualBox version is 6.1\nLet me talk about nostalgic For most people, Win95 is their youth, so they create UI component library React95, or create an OS serenity together. But for most Chinese people, when they got PC in 2000-2010, they used Windows XP in their PC.\nsh1zuku is from China, Taiwan, he created a Windows XP simulator on website: Project Link, Online Demo, and another programmer from Vietnam wrote a Windows 7 Simulator on website Online Demo.\nHonestly, I don\u0026rsquo;t have enough ability to develop simulator program like them, but I have an idea that I can install a Windows XP virtual machine on my PC.\nThe steps you might choose Install VirtualBox. Download Image: Find Windows XP Image in MSDN Itellyou and then download it. Install the Image in VirtualBox. Run the installed image, and install the OS. Then, you will discover that the Windows XP only has 30-day trail. In the early 2000s, piracy was rampant, and Microsoft took strong measures to limit it. Even if you enter the correct serial number when you install, Microsoft will ask you to activate using a phone, etc.\nBut I just want to experienct the old OS in my PC! (It\u0026rsquo;s too hard for me to activate a copyrighted WinXP!)\nThe Right Solution So I don\u0026rsquo;t use this copyrighted WinXP image anymore, I should search some WinXP image without activation.\nHere, I found github WinXPImage from Github, but his Image file saved on Google Drive. I have downloaded that and uploaded to Baidu Cloud:\nLink：https://pan.baidu.com/s/1ypKeaZixJXnbqAo4ZT0YLQ?pwd=30dd Fetch Code：30dd\nWhen you install this image on VirtualBox, you will get a WinXP(English Edition) that you can use indefinitely.\nBut you may not be able to start this Image successfully, you should execute this after importing the OVA File:\nvbox-img geometry --filename Windows_XP_Professional-disk1.vdi --format VDI --cylinders 5874 --heads 255 --sectors 56 From github issue streeg\u0026rsquo;s solution.\nHow to Chinesize Windows XP? I want to use Chinese Windows XP to reminisce about the past, but this image doesn\u0026rsquo;t have Chinese language support.\nAfter searching many source, I finally found a language package mui_win_xp_pro_n_cd1 in here.\nI downloaded it and uploaded to Baidu Cloud:\nLink：https://pan.baidu.com/s/18mW9OCRejMDoEpUcih-zlA?pwd=peu4\nFetch Code：peu4\nThen,\nConfigure share folder in Windows XP virtual machine. Source Transfer mui_win_xp_pro_n_cd1.iso to Windows XP virtual machine by share folder. Install it, Source Finally, reboot Windows XP virtual machine.\nScreenshot: ","permalink":"https://windypath.com/en/posts/nostalgic_winxp/","summary":"Click here to download my virtual machine image Download virtual machine image:\nLink：https://pan.baidu.com/s/1yfY0SjDrtOeuTiEWf7YizA?pwd=374l\nFetch Code：374l\nMy VirtualBox version is 6.1\nLet me talk about nostalgic For most people, Win95 is their youth, so they create UI component library React95, or create an OS serenity together. But for most Chinese people, when they got PC in 2000-2010, they used Windows XP in their PC.\nsh1zuku is from China, Taiwan, he created a Windows XP simulator on website: Project Link, Online Demo, and another programmer from Vietnam wrote a Windows 7 Simulator on website Online Demo.","title":"Windows XP Virtual Machine Chinese Version Without Activation Image Download"},{"content":"An Example (kotlin) import java.util.TreeSet /** * Define a data class to test TreeSet Collection * Sort by TreeSet * id: player id * score: player score */ data class PlayerScore(var id: Int, var score: Int): Comparable\u0026lt;PlayerScore\u0026gt; { override fun compareTo(other: PlayerScore): Int { return if (score \u0026gt; other.score) { 1 } else if (score \u0026lt; other.score) { -1 } else { 0 } } } fun main() { //create a TreeSet val treeSet: TreeSet\u0026lt;PlayerScore\u0026gt; = TreeSet() //create 3 PlayerScore object，and use \u0026#39;id101Obj\u0026#39; reference to the first obj //put these objects into the treeset val id101Obj = PlayerScore(101,100) //put in different order treeSet.add(PlayerScore(102,200)) treeSet.add(id101Obj) treeSet.add(PlayerScore(103,300)) println(\u0026#34;Add the objects in a different order and print out by score from smallest to largest:\u0026#34;) showTreeSet(treeSet) println(\u0026#34;Add an object with duplicated id but different score, and print out by score from smallest to largest:\u0026#34;) treeSet.add(PlayerScore(101,500)) showTreeSet(treeSet) println(\u0026#34;Change the score of the object whose id is 101 to 400， and print out by score from smallest to largest:\u0026#34;) id101Obj.score = 400 showTreeSet(treeSet) } private fun showTreeSet(treeSet: TreeSet\u0026lt;PlayerScore\u0026gt;) { treeSet.forEachIndexed { index, s -\u0026gt; println(\u0026#34;rank:${index+1} score:${s.score} id:${s.id}\u0026#34;) } println() } Console output:\nAdd the objects in a different order and print out by score from smallest to largest: rank:1 score:100 id:101 rank:2 score:200 id:102 rank:3 score:300 id:103 Add an object with duplicated id but different score, and print out by score from smallest to largest: rank:1 score:100 id:101 rank:2 score:200 id:102 rank:3 score:300 id:103 rank:4 score:500 id:101 Change the score of the object whose id is 101 to 400， and print out by score from smallest to largest: rank:1 score:400 id:101 rank:2 score:200 id:102 rank:3 score:300 id:103 rank:4 score:500 id:101 Analysis First, PlayerScore implements Comparable interface , implements the function of sorting from smallest to largest. If there are only three data pieces at the beginning, insert them in different order, treeset does sort normally.\nThen, when player 101 score was changed, we need to resort. We tried 2 ways to resort.\nChange id101Obj\u0026rsquo;s score by reference. Add a new obj which id is 101 and has a new score into treeset. Result:\nid101Obj\u0026rsquo;s score was changed, but its rank is still 1. Although the score is sorted, it has two objects which id is 101. So how to resort treeset when player\u0026rsquo;s score was changed?\nOne solution is that you can remove the object from treeset, and change its score, then add it to treeset. This is because the underlying TreeSet is a red-black tree, and the tree structure is adjusted when it is deleted and inserted.\nCode:\n//create a TreeSet val treeSet: TreeSet\u0026lt;PlayerScore\u0026gt; = TreeSet() //create 3 PlayerScore object，and use \u0026#39;id101Obj\u0026#39; reference to the first obj //put these objects into the treeset val id101Obj = PlayerScore(101,100) //put in different order treeSet.add(PlayerScore(102,200)) treeSet.add(id101Obj) treeSet.add(PlayerScore(103,300)) println(\u0026#34;Add the objects in a different order and print out by score from smallest to largest:\u0026#34;) showTreeSet(treeSet) treeSet.remove(id101Obj) id101Obj.score = 400 treeSet.add(id101Obj) println(\u0026#34;remove id101Obj from TreeSet，change score，and then add to treeSet中， print out by score from smallest to largest:\u0026#34;) showTreeSet(treeSet) Console output:\nAdd the objects in a different order and print out by score from smallest to largest: rank:1 score:100 id:101 rank:2 score:200 id:102 rank:3 score:300 id:103 remove id101Obj from TreeSet，change score，and then add to treeSet中， print out by score from smallest to largest: rank:1 score:200 id:102 rank:2 score:300 id:103 rank:3 score:400 id:101 Move Forward The solution that \u0026ldquo;Remove it, edit it, and add it\u0026rdquo; can finish resort, but treeSet is thread-unsafe. If there are many threads update player\u0026rsquo;s score, it might be cause some problems.\nAlthough TreeSet can sort as it inserts, it only allow insert once. The modification of the score after insertion does not change the sorting.\nTreeSet doesn\u0026rsquo;t make sense for rank list that move around a lot.\nAnother Rank List Solution I use TreeSet because it can sort as it inserts, but it\u0026rsquo;s not appropriate for a rank list.\nSo, if So another way to think about it is, if you only use a longer ArrayList to store the player\u0026rsquo;s score object, you also sort it on insert/update/delete?\nInsert/update/delete, modify the data in the ArrayList, and then sort.\n","permalink":"https://windypath.com/en/posts/about_java_treeset/","summary":"An Example (kotlin) import java.util.TreeSet /** * Define a data class to test TreeSet Collection * Sort by TreeSet * id: player id * score: player score */ data class PlayerScore(var id: Int, var score: Int): Comparable\u0026lt;PlayerScore\u0026gt; { override fun compareTo(other: PlayerScore): Int { return if (score \u0026gt; other.score) { 1 } else if (score \u0026lt; other.score) { -1 } else { 0 } } } fun main() { //create a TreeSet val treeSet: TreeSet\u0026lt;PlayerScore\u0026gt; = TreeSet() //create 3 PlayerScore object，and use \u0026#39;id101Obj\u0026#39; reference to the first obj //put these objects into the treeset val id101Obj = PlayerScore(101,100) //put in different order treeSet.","title":"Some Usage and features on Java TreeSet"},{"content":"Welcome Hello, welcome to WindyPath. I\u0026rsquo;m the owner of this website. My English name is Johnathan.\nMy Chinese nickname is \u0026ldquo;凌虚\u0026rdquo;, the name comes from a Chinese animation film, The Legend of Qin. \u0026ldquo;凌虚\u0026rdquo; is the name of a sword, which is belong to Zhang Liang(张良), a famous strategist in the Warring Period.\nThe name of this website is WindyPath, its Chinese name is \u0026ldquo;风萧古道\u0026rdquo;.\nThe first two characters \u0026ldquo;风萧\u0026rdquo; come from poetry \u0026ldquo;风萧萧兮易水寒\u0026rdquo;, The last two characters are derived from poetry \u0026ldquo;古道西风瘦马\u0026rdquo;.\nAbout Me I\u0026rsquo;m a Game Server Engineer. I used to develop website, including frontend and backend, but now I don\u0026rsquo;t develop web anymore.\nI graduated from university in 2019, and I came to ShangHai in December 2020.\nRead more about my computer story HERE.\nIdealism For a long time, I didn\u0026rsquo;t know what to study software development for. For earning money, I have earned some money in these years. So, What do I want to move forward for in my long career of software development?\nFor Chinese Software Just for Chinese Software.\nArticle Articles on this website are not updated frequently.\nBut I usually browse articles in other blogs. I discovered that some blogs have many articles, but most of it is whining or note. These articles have no effect on improving the level of software development technology.\nSo, In my Blog, there is only one kind of article:\nTechnology Article\nEven if sometimes I really want to complain something I don\u0026rsquo;t like, I will combine it with some software knowledge to ensure all of visitors can learn something in my Blog.\nOther daily life teasing and grumbling will publish in Twitter.\nContact Email: windypathblog@gmail.com Telegram: @windypath\n","permalink":"https://windypath.com/en/about/","summary":"Welcome Hello, welcome to WindyPath. I\u0026rsquo;m the owner of this website. My English name is Johnathan.\nMy Chinese nickname is \u0026ldquo;凌虚\u0026rdquo;, the name comes from a Chinese animation film, The Legend of Qin. \u0026ldquo;凌虚\u0026rdquo; is the name of a sword, which is belong to Zhang Liang(张良), a famous strategist in the Warring Period.\nThe name of this website is WindyPath, its Chinese name is \u0026ldquo;风萧古道\u0026rdquo;.\nThe first two characters \u0026ldquo;风萧\u0026rdquo; come from poetry \u0026ldquo;风萧萧兮易水寒\u0026rdquo;, The last two characters are derived from poetry \u0026ldquo;古道西风瘦马\u0026rdquo;.","title":"About"}]